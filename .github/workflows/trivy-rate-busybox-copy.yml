name: Trivy Image Scan

on:
  workflow_dispatch:
  schedule:
    - cron: '*/1 * * * *'
  push:
    branches:
      - main
  pull_request:

jobs:
  trivy-scan:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository to scan
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step to set metadata or scan information
      # Example metadata step to get scan_image and cis_json_file outputs
      # Step to set metadata for image scan
      - name: Set metadata for image scan
        id: meta
        run: |
          echo "scan_image=python:3.4-alpine"
          echo "cis_json_file=cis_scan_results.json"
          echo "::set-output name=scan_image::python:3.4-alpine"
          echo "::set-output name=cis_json_file::cis_scan_results.json" 
          
       # Loop to run the Trivy scan multiple times to test rate limit
      - name: Run Trivy Scan Multiple Times to Test Rate Limit
        run: |
            for i in {1..90}; do
              echo "Running scan #$i"
              docker run --rm -e TRIVY_PASSWORD=$TRIVY_PASSWORD ghcr.io/aquasecurity/trivy:0.37.2 image ${{ steps.meta.outputs.scan_image }} --compliance docker-cis -f json --ignore-unfixed -o ${{ steps.meta.outputs.cis_json_file }}
              echo "Finished scan #$i"
              echo "Cleaning up cache"
              sudo rm -rf /root/.cache/trivy # Use sudo to clear the cache
            done
        env:
            TRIVY_PASSWORD: ${{ secrets.TRIVY_PAT }}
  

      # Upload the Trivy scan report (optional step to upload the output JSON)
      - name: Upload Trivy Scan Report
        uses: actions/upload-artifact@v3
        with:
          name: trivy-scan-report
          path: ${{ steps.meta.outputs.cis_json_file }} 
